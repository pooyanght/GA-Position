import time

import cflib.crtp
from cflib.crazyflie.swarm import CachedCfFactory
from cflib.crazyflie.swarm import Swarm




def take_off(scf):
    commander= scf.cf.high_level_commander

    commander.takeoff(1.0, 2.0)
    time.sleep(3)

def land(scf):
    commander= scf.cf.high_level_commander

    commander.land(0.0, 2.0)
    time.sleep(2)

    commander.stop()

def hover_sequence(scf):
    take_off(scf)
    land(scf)

def run_square_sequence(scf):
    box_size = 1
    flight_time = 2

    commander= scf.cf.high_level_commander

    commander.go_to(box_size, 0, 0, 0, flight_time, relative=True)
    time.sleep(flight_time)

    commander.go_to(0, box_size, 0, 0, flight_time, relative=True)
    time.sleep(flight_time)

    commander.go_to(-box_size, 0, 0, 0, flight_time, relative=True)
    time.sleep(flight_time)

    commander.go_to(0, -box_size, 0, 0, flight_time, relative=True)
    time.sleep(flight_time)



uris = {
    'radio://0/80/2M/E7E7E7E701',
   # 'radio://0/80/2M/E7E7E7E702',
    'radio://0/80/2M/E7E7E7E703',
   #'radio://0/80/2M/E7E7E7E704',
    'radio://0/80/2M/E7E7E7E705',
    'radio://0/80/2M/E7E7E7E706',
    #'radio://0/80/2M/E7E7E7E707',
    'radio://0/80/2M/E7E7E7E708',
    #'radio://0/80/2M/E7E7E7E709',
    'radio://0/80/2M/E7E7E7E70A',
}

if _name_ == '_main_':
    cflib.crtp.init_drivers()
    factory = CachedCfFactory(rw_cache='./cache')
    with Swarm(uris, factory=factory) as swarm:
        print('Connected to  Crazyflies')
        #swarm.parallel_safe(light_check)
        #swarm.reset_estimators()
        #swarm.sequential(hover_sequence)
        #swarm.parallel_safe(hover_sequence)
        swarm.parallel_safe(take_off)
        swarm.parallel_safe(run_square_sequence)
        swarm.parallel_safe(land)
